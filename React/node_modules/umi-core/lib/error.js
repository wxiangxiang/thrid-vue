"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.printUmiError = printUmiError;
exports.UmiError = void 0;

var _chalk = _interopRequireDefault(require("chalk"));

var _signale = _interopRequireDefault(require("signale"));

var _marked = _interopRequireDefault(require("marked"));

var _markedTerminal = _interopRequireDefault(require("marked-terminal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_marked.default.setOptions({
  renderer: new _markedTerminal.default()
});

class UmiError extends Error {
  constructor(opts, ...params) {
    const message = opts.message,
          code = opts.code,
          context = opts.context;
    super(message, ...params);
    this.code = code;
    this.context = context || {};
  }

}

exports.UmiError = UmiError;

function printUmiError(e, opts = {}) {
  if (!(e instanceof UmiError)) {
    _signale.default.error(e);

    return;
  }

  const detailsOnly = opts.detailsOnly;
  const context = e.context;
  let code = e.code; // 支持内部框架扩展 error code map

  const errorCodeMap = require(process.env.ERROR_CODE_MAP_PATH || '@umijs/error-code-map');

  if (!code) {
    for (var _i = 0, _Object$keys = Object.keys(errorCodeMap); _i < _Object$keys.length; _i++) {
      const c = _Object$keys[_i];
      const test = errorCodeMap[c].test;

      if (test && test({
        error: e,
        context
      })) {
        code = c;
      }
    }
  }

  if (!code) return;
  const _errorCodeMap$code = errorCodeMap[code],
        message = _errorCodeMap$code.message,
        details = _errorCodeMap$code.details;
  console.error(`\n${_chalk.default.bgRed.black(' ERROR CODE ')} ${_chalk.default.red(code)}`);

  if (!detailsOnly) {
    console.error(`\n${_chalk.default.bgRed.black(' ERROR ')} ${_chalk.default.red(e.message || message)}`);
  }

  if (process.env.LANG.includes('zh_CN')) {
    console.error(`\n${_chalk.default.bgMagenta.black(' DETAILS ')}\n\n${(0, _marked.default)(details['zh-CN'])}`);
  } else {
    console.error(`\n${_chalk.default.bgMagenta.black(' DETAILS ')}\n\n${(0, _marked.default)(details.en)}`);
  }

  if (!detailsOnly && e.stack) {
    console.error(`${_chalk.default.bgRed.black(' STACK ')}\n\n${e.stack.split('\n').slice(1).join('\n')}`);
  }
}