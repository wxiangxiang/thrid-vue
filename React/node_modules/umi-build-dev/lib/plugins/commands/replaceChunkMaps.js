"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.getServerContent = exports.getAssetsManifest = void 0;

var _path = require("path");

var _fs = require("fs");

const getAssetsManifest = service => {
  const paths = service.paths,
        config = service.config;
  const _config$manifest$file = config.manifest.fileName,
        fileName = _config$manifest$file === void 0 ? 'asset-manifest.json' : _config$manifest$file;
  const absOutputPath = paths.absOutputPath; // fileName: '../../manifest.json'

  const manifestPath = (0, _path.join)(absOutputPath, (0, _path.basename)(fileName));

  if (!(0, _fs.existsSync)(manifestPath)) {
    const errMsg = `Umi SSR error: manifest file ${manifestPath} not found`;
    throw new Error(errMsg);
  }

  const manifest = JSON.parse((0, _fs.readFileSync)(manifestPath, 'utf-8'));
  return manifest;
};

exports.getAssetsManifest = getAssetsManifest;

const getServerContent = umiServerPath => {
  if ((0, _fs.existsSync)(umiServerPath)) {
    const content = (0, _fs.readFileSync)(umiServerPath, 'utf-8');
    return content;
  }

  return '';
};

exports.getServerContent = getServerContent;

var _default = service => {
  const paths = service.paths,
        config = service.config;
  const absOutputPath = paths.absOutputPath;
  const _config$manifest$base = config.manifest.basePath,
        basePath = _config$manifest$base === void 0 ? '' : _config$manifest$base;
  const manifest = getAssetsManifest(service);
  const umiServerPath = (0, _path.join)(absOutputPath, 'umi.server.js');
  const umiServer = getServerContent(umiServerPath);
  const result = umiServer.replace(/__UMI_SERVER__\.js/g, manifest[`${basePath}umi.js`].split('/').pop()).replace(/__UMI_SERVER__\.css/g, // umi.css may not exist when using dynamic Routing
  manifest[`${basePath}umi.css`] ? manifest[`${basePath}umi.css`].split('/').pop() : '');
  (0, _fs.writeFileSync)(umiServerPath, result, 'utf-8');
};

exports.default = _default;