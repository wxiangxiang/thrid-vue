"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _dva = require("dva");

var _antd = require("antd");

require("./client.css");

var _model = _interopRequireDefault(require("./model"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Routes = (0, _dva.connect)(function (state) {
  return {
    routes: state.routes
  };
})(function (props) {
  function renderRoutes(routes) {
    return _react.default.createElement("ul", {
      className: "client-list"
    }, routes.map(function (route, i) {
      if (!route.path) return null;
      var keys = Object.keys(route).filter(function (key) {
        if (['exact', 'routes', 'component'].includes(key)) return false;
        if (key.charAt(0) === '_') return false;
        return true;
      });

      function getValue(key) {
        if (key === 'path') {
          return _react.default.createElement("a", {
            href: "http://localhost:8000".concat(route[key])
          }, route[key]);
        }

        return route[key];
      }

      return _react.default.createElement("li", {
        key: route.key || i,
        className: "client-item"
      }, _react.default.createElement("div", null, _react.default.createElement(_antd.Icon, {
        className: "client-type",
        type: route.routes ? 'folder-open' : 'file'
      }), _react.default.createElement("span", {
        className: "client-info"
      }, keys.map(function (key, i) {
        return _react.default.createElement("span", {
          key: key
        }, _react.default.createElement("strong", null, key, ": "), _react.default.createElement("code", null, getValue(key)), i === keys.length - 1 ? '' : _react.default.createElement("strong", null, ", "));
      })), _react.default.createElement(_antd.Popconfirm, {
        title: "Are you sure delete this component?",
        onConfirm: function (route) {
          window.send('rm', ['page', route.component]);
        }.bind(null, route)
      }, _react.default.createElement(_antd.Icon, {
        className: "client-icon",
        type: "delete",
        theme: "filled"
      }))), route.routes ? renderRoutes(route.routes) : null);
    }));
  }

  return _react.default.createElement("div", null, _react.default.createElement("div", {
    className: "client-actions"
  }, _react.default.createElement(_antd.Button, {
    type: "primary",
    onClick: function onClick() {
      var name = window.prompt("What's your page name?");

      if (name) {
        window.send('generate', ['page', name]);
      }
    }
  }, "add route"), "\xA0\xA0", _react.default.createElement(_antd.Button, {
    type: "primary",
    onClick: function onClick() {
      var name = window.prompt("What's your layout name?");

      if (name) {
        window.send('generate', ['layout', name]);
      }
    }
  }, "add layout")), renderRoutes(props.routes.data));
});

var _default = function _default(api) {
  api.addPanel({
    title: 'Routes Manager',
    path: '/routes',
    component: Routes,
    models: [_model.default]
  });
};

exports.default = _default;