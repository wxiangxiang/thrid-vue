"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var parser = _interopRequireWildcard(require("@babel/parser"));

var _traverse = _interopRequireDefault(require("@babel/traverse"));

var _generator = _interopRequireDefault(require("@babel/generator"));

var t = _interopRequireWildcard(require("@babel/types"));

var _prettier = _interopRequireDefault(require("prettier"));

var _lodash = require("lodash");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function insertComponentToRender(blockStatement, identifier) {
  // blockStatement: https://babeljs.io/docs/en/babel-types#blockstatement
  const body = blockStatement.body;
  const returnBlock = body.find(b => {
    return t.isReturnStatement(b);
  });

  if (t.isJSXElement(returnBlock.argument)) {
    insertComponentToElement(returnBlock.argument, identifier);
  }
}

function insertComponentToElement(element, identifier) {
  // https://babeljs.io/docs/en/babel-types#jsxelement
  const newElement = t.jsxElement(t.jsxOpeningElement(t.jsxIdentifier(identifier), [], true), null, [], true);
  element.children.push(newElement);
}

function _default(content, {
  relativePath,
  identifier
}) {
  const ast = parser.parse(content, {
    sourceType: 'module',
    plugins: ['jsx', 'decorators-legacy', 'typescript']
  });
  (0, _traverse.default)(ast, {
    Program({
      node
    }) {
      // add import
      const body = node.body;
      const lastImportSit = (0, _lodash.findLastIndex)(body, item => {
        return t.isImportDeclaration(item);
      });
      const newImport = t.ImportDeclaration([t.ImportDefaultSpecifier(t.identifier(identifier))], t.stringLiteral(relativePath));
      body.splice(lastImportSit + 1, 0, newImport);
    },

    ClassMethod({
      node
    }) {
      // for class component
      const key = node.key,
            body = node.body;

      if (t.isIdentifier(key, {
        name: 'render'
      })) {
        if (t.isBlockStatement(body)) {
          insertComponentToRender(body, identifier);
        }
      }
    },

    ExportDefaultDeclaration({
      node
    }) {
      // for purefunction component
      const declaration = node.declaration;

      if (t.isArrowFunctionExpression(declaration) || t.isFunctionDeclaration(declaration)) {
        if (t.isBlockStatement(declaration.body)) {
          insertComponentToRender(declaration.body, identifier);
        } else if (t.isJSXElement(declaration.body)) {
          insertComponentToElement(declaration.body, identifier);
        }
      }
    }

  });
  const newCode = (0, _generator.default)(ast, {}).code;
  return _prettier.default.format(newCode, {
    // format same as ant-design-pro
    singleQuote: true,
    trailingComma: 'es5',
    printWidth: 100,
    parser: 'babylon'
  });
}